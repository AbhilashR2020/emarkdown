{erl_opts, [debug_info]}.

{deps,[
]}.

%% == Cover ==

{cover_enabled, true}.

%% == Profiles ==

{profiles, [
  {test, [
    {deps, [
      {katana_test, "0.1.1"},
      {mixer, "0.1.5", {pkg, inaka_mixer}}
    ]}
  ]}
]}.


%% == Port Compiler ==

{port_env, [
	    {"CXXFLAGS", "$CFLAGS /EHa /Yc -D_MBCS /MD /D_AFXDLL /D_ATL_DLL -DWIN32 -D__WIN32__ -D_WINDOWS -D_WIN32_DCOM -DDLOG_DEFAULT=DLOG_DEBUG -DDRIVER_NAME=emarkdown -D_THREAD_SAFE /W3 /Zc:wchar_t /Zc:forScope"},
	    {"win32", "DRV_CFLAGS",  "$DRV_FLAGS /Zi /c /W3 $ERL_CFLAGS"},
	    {"win32", "LDFLAGS", "$LDFLAGS"},
	    {"win32", "DRV_LDFLAGS", "$DRV_LDFLAGS /ignore:4006 /ignore:4098 /LIBPATH:lib /FORCE:MULTIPLE"}
	   ]}.

%% List of filenames or wildcards to be compiled. May also contain a tuple
%% consisting of a regular expression to be applied against the system
%% architecture as a filter.
{port_specs, [
	      {"(linux|freebsd|darwin)","priv/gen_msmq_drv.so",
	       ["c_src/dlog.c",
			"c_src/gen_driver.c"
	       ]},
	      {"win32","priv/emarkdown.dll",
	       ["c_src/emarkdown.c"
	       ]}
	     ]}.

{clean_files, ["./ebin/*.beam",
               "./priv/*.*",
               "./c_src/*.o",
               "./c_src/*.tlh",
               "./c_src/*.pch"]}.

{ post_hooks, [  ]}.	     
